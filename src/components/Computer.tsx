/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: LinkN7 (https://sketchfab.com/LinkN152)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/apple-ii-computer-d63cf1fd519443648a31db6cab036ab9
Title: APPLE II Computer
*/

import React, { useEffect } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { GroupProps } from '@react-three/fiber'
import * as THREE from 'three'
import { StaticImageData } from 'next/image'

type GLTFResult = GLTF & {
  nodes: Record<string, THREE.Mesh>
  materials: Record<string, THREE.Material>
}

interface ComputerProps extends GroupProps {
  image: StaticImageData
}

export function Computer(props: ComputerProps) {
  const { nodes, materials } = useGLTF('/onion-blog/models/apple_ii_computer.glb') as GLTFResult
  
  const screenTexture = useTexture(props.image.src)

  useEffect(() => {
    const monitorMaterial = materials.Monitor as THREE.MeshStandardMaterial
    if (monitorMaterial) {
      monitorMaterial.map = screenTexture
      monitorMaterial.emissive = new THREE.Color(0x001100)
      monitorMaterial.emissiveIntensity = 0.5
      monitorMaterial.needsUpdate = true
    }
  }, [screenTexture, materials])

  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={[37.084, 36.308, 36.308]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_BLACK_0.geometry}
            material={materials.BLACK}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_Misk_0.geometry}
            material={materials.Misk}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_WpalsicC_0.geometry}
            material={materials.WpalsicC}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_Key_0.geometry}
            material={materials.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_Mk_0.geometry}
            material={materials.material_4}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_WPlasticM_0.geometry}
            material={materials.WPlasticM}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_BCover_0.geometry}
            material={materials.BCover}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_Monitor_0.geometry}
            material={materials.Monitor}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_BplasticC_0.geometry}
            material={materials.BplasticC}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_RED_0.geometry}
            material={materials.material_9}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_WplasicD_0.geometry}
            material={materials.WplasicD}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_Batton11_0.geometry}
            material={materials['Batton1.1']}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cube027_Wire_0.geometry}
            material={materials.Wire}
          />
        </group>
      </group>
    </group>
  )
}
useGLTF.preload('/onion-blog/models/apple_ii_computer.glb')

